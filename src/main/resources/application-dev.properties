# Database Settings
spring.datasource.url=${DB_URL:jdbc:mysql://localhost/DevProGen?createDatabaseIfNotExist=true}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=${DB_DRIVER_CLASS:com.mysql.cj.jdbc.Driver}

# Hibernate Settings
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL:create}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}

# Mail Settings
spring.mail.host=${MAIL_HOST:SMTP_SERVER_HOST}
spring.mail.port=${MAIL_PORT:SMTP_SERVER_PORT}
spring.mail.username=${MAIL_USERNAME:SMTP_USERNAME}
spring.mail.password=${MAIL_PASSWORD:SMTP_PASSWORD}

# JWT Settings
profonline.jwt.secretkey=${JWT_SECRET_KEY:JWT_SECRET_KEY}
profonline.jwt.expirationtime=${JWT_EXPIRATION_TIME:JWT_EXPIRATION_TIME}

# OAuth2 Settings
# Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH2_ISSUER_URI:http://localhost:8080/auth/realms/baeldung}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH2_JWK_SET_URI:http://localhost:8080/auth/realms/baeldung/protocol/openid-connect/certs}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:OAUTH2_GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:OAUTH2_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/oauth2/code/google}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:email,profile}

# Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID:OAUTH2_FACEBOOK_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET:OAUTH2_FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.redirect-uri=${FACEBOOK_REDIRECT_URI:http://localhost:8080/oauth2/code/facebook}
spring.security.oauth2.client.registration.facebook.scope=${FACEBOOK_SCOPE:email,public_profile}

# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:OAUTH2_GITHUB_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:OAUTH2_GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=user:email